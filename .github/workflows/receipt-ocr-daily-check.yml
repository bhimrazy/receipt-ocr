name: Receipt OCR Daily Check
on:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight UTC
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: true

      - name: Install uv and set Python version
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: "3.12"
          enable-cache: true

      - name: Install receipt-ocr
        run: uv pip install receipt-ocr

      - name: Test CLI usage
        run: |
          receipt-ocr images/receipt.jpg

      - name: Test programmatic usage
        run: |
          python -c "
          from receipt_ocr.processors import ReceiptProcessor
          from receipt_ocr.providers import OpenAIProvider
          import os
          
          provider = OpenAIProvider(api_key=os.getenv('OPENAI_API_KEY'), base_url=os.getenv('OPENAI_BASE_URL'))
          processor = ReceiptProcessor(provider)
          
          json_schema = {
              'merchant_name': 'string',
              'merchant_address': 'string',
              'transaction_date': 'string',
              'transaction_time': 'string',
              'total_amount': 'number',
              'line_items': [
                  {
                      'item_name': 'string',
                      'item_quantity': 'number',
                      'item_price': 'number',
                  }
              ],
          }
          
          result = processor.process_receipt('images/receipt.jpg', json_schema, os.getenv('OPENAI_MODEL'))
          print('Programmatic test result:', result is not None and isinstance(result, dict))
          "
